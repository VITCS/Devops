version: 0.2
env:
  git-credential-helper: yes
phases:
  install:
    runtime-versions:
      nodejs: 16
    commands:
      # Install packages or any pre-reqs in this phase.
      # Upgrading SAM CLI to latest version
      - pip3 install --upgrade aws-sam-cli
      - sam --version
      # Setting up the Temporary Role
      - TEMP_ROLE=$(aws sts assume-role --role-arn $ASSUME_ROLE_ARN --role-session-name prodplatform)
      - export TEMP_ROLE
      - export AWS_ACCESS_KEY_ID=$(echo "${TEMP_ROLE}" | jq -r '.Credentials.AccessKeyId')
      - export AWS_SECRET_ACCESS_KEY=$(echo "${TEMP_ROLE}" | jq -r '.Credentials.SecretAccessKey')
      - export AWS_SESSION_TOKEN=$(echo "${TEMP_ROLE}" | jq -r '.Credentials.SessionToken')

  pre_build:
    commands:
      # Run tests, lint scripts or any other pre-build checks.
      #- npm run test

  build:
    commands:
      # Use Build phase to build your artifacts (compile, etc.)
      - cd cloudfront && sam build -t template.yaml
      - cd ..

  post_build:
    commands:
      - echo ${Environment}
      # Use Post-Build for notifications, git tags, upload artifacts to S3
      - export DEPLOY_PARMS=" --s3-bucket ${DEPLOY_BUCKET} --region ${DEPLOY_REGION} --no-confirm-changeset --no-fail-on-empty-changeset"
      - echo $DEPLOY_PARMS
      - cd cloudfront
      - sam deploy -t template.yaml --config-env ${env}MerchantUI  $DEPLOY_PARMS
      # -   sam deploy -t template.yaml --config-env ${env}CustomerUI  $DEPLOY_PARMS
      # -   sam deploy -t template.yaml --config-env ${env}ProducerUI  $DEPLOY_PARMS
      # -   sam deploy -t template.yaml --config-env ${env}PromotionalUI  $DEPLOY_PARMS
      # - sam deploy -t template.yaml --config-env ${env}internalopsUI  $DEPLOY_PARMS
      # -   sam deploy -t template.yaml --config-env ${env}Images  $DEPLOY_PARMS
      - cd ..

      #  Backup the Repository
      - ls -ltr
      - unset AWS_ACCESS_KEY_ID
      - unset AWS_SECRET_ACCESS_KEY
      - unset AWS_SESSION_TOKEN
      - git config --global --unset-all credential.helper
      - git config --global credential.helper '!aws codecommit credential-helper $@'
      - git config --global credential.UseHttpPath true
      - git clone --mirror https://git-codecommit.us-east-1.amazonaws.com/v1/repos/${REPO_NAME} LocalRepository
      - cd LocalRepository
      - git remote set-url --push origin https://git-codecommit.${BACKUP_REPO_REGION}.amazonaws.com/v1/repos/${REPO_NAME}
      - git config --global credential.helper '!aws codecommit credential-helper $@'
      - git config --global credential.UseHttpPath true
      - git fetch -p origin
      - git push --mirror
      - cd ..
      - rm -rf  LocalRepository

      # sam deploy -t .\template.yaml --config-env prdImages --s3-bucket 409907184267-spirits-prd-samdeploy --region us-east-1
      # sam deploy -t .\template.yaml --config-env prdImages --s3-bucket 409907184267-spirits-prd-samdeploy-us-west-2 --region us-west-2
